cmake_minimum_required(VERSION 3.5)
project(k4a_driver)

find_package(ament_cmake REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(image_transport REQUIRED)
find_package(rclcpp REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(tf2_msgs REQUIRED)

find_package(Eigen3 REQUIRED)
set(Eigen3_INCLUDE_DIRS ${EIGEN3_INCLUDE_DIR})
find_package(k4a REQUIRED)

include_directories(include SYSTEM ${Eigen3_INCLUDE_DIRS} ${k4a_INCLUDE_DIRS})

## Build options
set(CMAKE_INTERPROCEDURAL_OPTIMIZATION ON)
cmake_policy(SET CMP0069 NEW)

add_compile_options(-std=c++17)
add_compile_options(-Wall)
add_compile_options(-Wextra)
add_compile_options(-Werror)
add_compile_options(-Wconversion)
add_compile_options(-Wshadow)
add_compile_options(-O3)
add_compile_options(-g)
add_compile_options(-Werror=non-virtual-dtor)
add_compile_options(-Wold-style-cast)
add_compile_options(-Wpessimizing-move)
add_compile_options(-Wuninitialized)

add_library(${PROJECT_NAME} SHARED src/${PROJECT_NAME}/k4a_driver.ros2.cpp)
ament_target_dependencies(
  ${PROJECT_NAME} geometry_msgs image_transport rclcpp sensor_msgs tf2_msgs)
target_link_libraries(${PROJECT_NAME} k4a::k4a)

add_executable(${PROJECT_NAME}_node src/k4a_driver_node.ros2.cpp)
target_link_libraries(${PROJECT_NAME}_node ${PROJECT_NAME} k4a::k4a)

#############
## Install ##
#############

## Mark executables and/or libraries for installation
install(TARGETS ${PROJECT_NAME}
  ARCHIVE DESTINATION lib
  LIBRARY DESTINATION lib
  RUNTIME DESTINATION bin
)

install(
  TARGETS ${PROJECT_NAME}_node
  RUNTIME DESTINATION lib/${PROJECT_NAME}
)

## Mark cpp header files for installation
install(DIRECTORY include/
  DESTINATION include
  FILES_MATCHING PATTERN "*.ros2.hpp"
  PATTERN ".svn" EXCLUDE
)

ament_export_include_directories(include)
ament_export_libraries(${PROJECT_NAME})

ament_package()
